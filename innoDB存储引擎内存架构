innoDB存储引擎内存架构
	1.  Buffer  pool：缓冲池是内存中的一个区域，里面可以缓存磁盘上经常操作的真实数据，在执行增删改查操作时，先操作缓冲池中的数据（若缓冲池中没有数据，则从磁盘加载并缓存），
	     然后再以一定频率刷新到磁盘，从而减少磁盘io，加快处理速度；
	
	     缓冲池以page页为单位，底层采用链表数据结构管理page，根据状态，将page分为三种类型：
	     free  page：空闲的page，未被使用；
	     clean  page：被使用过的page，但未被更改过；
	     dirty page：脏页，未被使用的page，数据被修改过，池中数据与磁盘的数据产生不一致；
	
	2.  change  buffer：更改缓冲区（针对于非唯一二级索引页），在执行MDL语句时，如果这些数据的page没有在buffer pool中，不会直接操作磁盘，而是将会数据变更存在更改缓冲区
	     在未来数据被读取时，再将数据合并恢复到buffer pool中，再将合并后的数据刷新到磁盘中；
	
	     change  buffer的意义是什么：与聚焦索引不同，二级索引检查是非唯一的，并且以相对随机的顺序插入二级索引，同样，删除和更改可能会影响索引树中不相邻的二级索引页，如果
	     每一次都操作磁盘，会造成大量的磁盘io，有了change  buffer之后，我们可以在缓冲池中进行合并处理，减少磁盘io
	
	3.  Adaptive  hash  index：自适应hash索引，用于优化buffer  pool数据的查询，innoDB存储引擎会监控表上各索引页的查询，如果观察到hash索引可以提高速度，则建立hash索引；
	
	    自适应hash索引，无需人工干预，是系统根据情况自动完成；
	    参数：adaptive_hash_index
	
	4.  Log  buffer：日志缓冲区，用来保存要写入磁盘中的log数据（redo log，  undo  log），默认大小为16mb，日志缓冲区的日志会定期刷新到磁盘中，如果需要更新，插入，删除许多
	     的事务，增加日志缓冲区的大小可以节省磁盘io
	 
	     参数：innoDB_log_buffer_size;  -->缓冲区大小                 innoDB_flush_log_at_trx_commit;   -->日志刷新到磁盘的时机
							-->1：日志在每次事务提交时写入并刷新磁盘；
							-->0：每秒将日志写入并刷新到磁盘一次
							-->2：日志在每次事务提交后写入，并每秒刷新到磁盘一次

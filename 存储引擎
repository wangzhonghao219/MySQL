存储引擎就是存储数据，建立索引，更新/查询数据等技术的实现方式。存储引擎是基于表的，而不是基于库的，所以存储引擎也可成为表类型；
	
存储引擎的特点：

	InnoDB
	介绍：InnoDB是一种兼顾高可靠性和高性能的通用存储引擎，是默认的MySQL存储引擎；
	特点：	DML操作遵循ACID模型，支持事务；
		行级锁，提高并发访问性能；
		支持外键FOREIGN  KEY约束，保证数据的完整性和正确性；
	文件：	xxx.ibd：  xxx代表的是表名，innoDB引擎的每张表都会对应这样的一个表空间文件，存储该表的表结构（frm，sdi），数据和索引
	逻辑存储结构：
		Tablespace（表空间）  --》  Segment（段）  --》  Extent（区）  --》  Page（页）  --》  Row（行）


	MsISAM
	介绍：是MySQL早期的默认引擎
	特点：	不支持事务和外键
		支持表锁，不支持行锁
		访问速度快
	文件：	xxx.sdi  --》存储表结构消息
		xxx.MYD  --》  存储数据
		xxx.MYI  --》  存储索引
		
	
	Memory
	介绍：memory引擎的表数据存储在内存中，由于受到硬件问题，或判断点问题的影响，只能将这些表作为临时表或者缓存使用；
	特点：	###内存存放###
		hash索引（默认）
	文件： 	xxx.sdi  ：  存储表机构信息；

存储引擎的选择：
	MySQL  --》  InnoDB：是MySQL的默认存储引擎，支持事务和外键，如果对事务的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入
		                  和查询外，还包含很多的更新，删除操作，那么InnoDB是最合适的选择

	MongoDB  --》MyISAM：如果应用是以读操作和插入操作为主 I/O，只有很少的更新和删除操作，并且对事务的完整性，并发性不是很高，那么选择这个存储引擎是
			        非常合适的；
	
	MyBatis  --》  memory：将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。memory的缺陷就是对表的大小有限制，太大的表无法缓存在内存中，
			      而且无法保证数据的安全性；
	

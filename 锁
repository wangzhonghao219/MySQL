锁
	介绍：锁是计算机协调多个进程或线程并发访问某一资源的机制，在数据库中，除了传统的计算资源（CPU, RAM, I/O）的争用以外，数据也是一种供许多用户共享的资源，如何保证数据并发访问的一致性
	          有效性是所有数据库必须解决的一个问题，锁冲突也是影响数据库并访问性能的一个重要因素，从这个角度来说，锁对数据库而言显得尤为重要，也更加复杂

	分类：按照锁的粒度分，分为以下三类：
  	          1.   全局锁：锁定数据库中的所有表；
	          2.   表级锁：每次操作锁住整张表；
	          3.   行级锁：每次操作锁住对应的行数据；
	
全局锁：全局锁就是对整个数据库实例进行加锁，加锁后整个实例就处于只读状态，后续的DML的写语句，DDL语句，以及更新操作的事务提交语句都将被阻塞；

	其典型的使用场景是做全库的逻辑备份，对所有的表进行锁定，从而获取一致性视图，保证数据的完整性；
	
	全局锁开启：  flush  tables  with  read  lock;
	备份数据：  mysqldump  -uroot -p密码 数据库名称>备份地址加名称     --》mysqldump为工具，在命令行执行，不在mysql中执行
		eg：  mysqldumo -uroot -p1234 itcast>itcast.sql;
	解锁：unlock  tables；

	特点：数据库中加全局锁，是一个比较重的操作，存在以下的问题
		1.如果在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停摆；
		2.如果在从库上备份，那么在备份期间从库不能执行主库同步过来的二进制日志（binlog）会导致主从延迟；
	
	在innoDB引擎中，我们可以在备份上添加参数--single-transaction参数来完成不加锁的一致性数据备份
	mysqldump  --single-transaction -uroot -p219845 itcast>D:/itcast.sql

表级锁：每次操作锁住整张表，锁定粒度打，发生冲突的概率最高，并发性最低，应用在MyISAM，innoDB，BOB引擎中；
	对于表级锁，主要分为以下三类：
	1.  表锁
	2.  元数据锁（meta  data  lock，   MDL）；
	3.  意向锁
	
	###表锁：对于表锁，分为两类：
		1.  表共享读锁（read  lock）
		2.  表独占写锁（write  lock）
	
	语法：1.  加锁：  lock  tables  表名...read/write
	          2.释放锁：   unlock  tables  /  客户端断开连接
	
	###元数据锁MDL
	MDL加锁的过程是系统自动控制的，无需显示使用，在访问一张表的时候会自动加上，MDL锁的主要作用是维护表元数据的数据一致性，在表上有活动事务的时候，不可以对元数据
	进行写入操作。为了避免DML和DDL冲突，保证读写的正确性。
	
	当对一张表进行增删改查的时候，加MDL读锁（共享）
	当对表结构进行变更操作的时候，加MDL写锁（排他）
	
	对应SQL					锁类型					说明
	lock  tables  xxx  read/write			SHARED_READ_ONLY/SHARED_NO_READ_WRITE	
	select,   select...lock  in  share  mode		SHARED_READ				只与EXCLUSIVVEC互斥
	insert,  update,  delete,  select...for  update	SHARED_WRITE				只与EXCLUSIVVEC互斥
	alter  table...				EXCLUSIVE				与其他的DML都互斥
	
	查看元数据锁
	select object_type,object_schema,object_name,Jock_type,lock_duration from performance_schema.metadata_locks ;

	###意向锁
	为了避免DML在执行时，加的行锁与表锁的冲突，在innoDB中引入了意向锁，使得表锁不用检查每行数据是否加锁，使用意向锁来减少表锁的检查
	
	分类
	1.  意向共享锁（IS）：与表锁共享锁兼容，与表锁排他锁互斥
	2.  意向排他锁（IX）：与表锁互斥，与意向锁兼容
		
	查看意向锁及行锁的加锁情况：
	select object schema,object name,index name,lock type,Jock mode,Jock data from performance schema.data locks;
	
行级锁：
	介绍：行级锁，每次操作锁住对应的行数据，锁定力度最小，发生锁冲突的概率最低，并发度最高，应用在innoDB存储引擎中
	          innoDB的数据是基于索引组织的，行锁是通过对索引上的索引项加锁实现的，而不是对记录加的锁
	
	对于行级锁，主要分为以下三类
	1.  行锁（Record  Lock）：锁定单个行记录的锁，防止其他事务对此进行update和delete。在RC和RR隔离级别都支持
	2.  
